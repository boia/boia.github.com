<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[boia's博客]]></title>
  <link href="http://boia.github.com/atom.xml" rel="self"/>
  <link href="http://boia.github.com/"/>
  <updated>2013-05-05T22:17:46+08:00</updated>
  <id>http://boia.github.com/</id>
  <author>
    <name><![CDATA[boia]]></name>
    <email><![CDATA[zhengwang2314@qq.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[前端神器Sublime Text 2基础入门]]></title>
    <link href="http://boia.github.com/blog/2013/05/05/sublimetext2/"/>
    <updated>2013-05-05T20:39:00+08:00</updated>
    <id>http://boia.github.com/blog/2013/05/05/sublimetext2</id>
    <content type="html"><![CDATA[<h2>开始sublime text</h2>

<p>之前我一直在用editplus写js，不是说editplus不好用，只是有些功能真的不是特别友好，所以从今之后改稍微强大一点的sublime text，最新版本貌似已经到3了，这确实很棒，可也很贵，70$对美国人没什么，但对中国的一个普通程序猿就有点相形见绌了。</p>

<br><br>


<!-- more -->


<h2>下载及破解</h2>

<p>并不推荐大家一定要用最新版，也会有一些极客因为执着而非得用3，这里我提供两个地址供大家选择</p>

<ul>
<li><p><a href="" title="http://www.sublimetext.com/3">Sublime Text 3 官方主页</a></p></li>
<li><p><a href="" title="http://www.sublimetext.com/2">Sublime Text 2 官方主页</a></p></li>
</ul>


<p>你可以下载适合你电脑系统的版本，这真的很棒！！！</p>

<ul>
<li><p><a href="" title="http://xiumu-blog.stor.sinaapp.com/blog-uploads/2013/02/SublimeTextKeygen.7z">Sublime Text 3 注册机</a></p></li>
<li><p><a href="" title="http://img.xiumu.org/blog-uploads/2013/02/Sublime_Text_CN.zip">Sublime Text 3 中文语言包</a></p></li>
</ul>


<br><br>


<p>① 注册机</p>

<p>打开注册机，点击Generate破解主文件，复制License中的内容，比如</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>-----BEGIN LICENSE-----
</span><span class='line'>Mr. White
</span><span class='line'>Unlimited User License
</span><span class='line'>EA7E-31845
</span><span class='line'>CF502875803A7265F0F83FA6731619B2
</span><span class='line'>42DB6024BF085A26B4E6BBA79A109CBD
</span><span class='line'>182A0C996874E7DF78537CF74E4EB596
</span><span class='line'>E85AC9A8CD0248A872DE6579413DD9FF
</span><span class='line'>77741FF482DF6925B627356EDFC6BD02
</span><span class='line'>38C03F082A2ED8D79BC00536C8DE83C4
</span><span class='line'>3AC650A7998B247673F109224259E0FF
</span><span class='line'>BF830166E43BBB29F9D97383D210604A
</span><span class='line'>-----END LICENSE-----</span></code></pre></td></tr></table></div></figure>


<p>这里必须把begin license到end license都得选中复制，然后点击patch key选中sublime_text.exe，打开Sublime Text，执行 Help->Enter license 粘贴你的License，点击OK，重启Sublime Text即可看到你的注册信息。</p>

<br><br>


<p>② 汉化</p>

<p>运行Sublime Text 2 点击 Preferneces -> Browse Packages 会打开 X:\Program Files\Sublime Text\Data\Packages 目录，点击向上并找到X:\Program Files\Sublime Text\Data\Installed Packages目录，从附件中下载汉化包并解压，复制Default.sublime-package到这个目录，无需重启即可直接看到汉化效果。</p>

<br><br>


<h2>配置</h2>

<p>在菜单 <code>Preferences</code> 下找到 <code>File Settings – User</code> 点击会打开<code>Base File.sublime-settings</code>这个文件</p>

<p>将其中的 <code>font_face</code> 后修改添加想要的设置字体（如果没有font_face自行添加这一行注意英文”,”逗号隔开），设置代码片段示例如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{
</span><span class='line'>  "color_scheme": "Packages/Color Scheme - Default/Monokai.tmTheme",
</span><span class='line'>  "font_face": "YaHei Consolas Hybrid",
</span><span class='line'>  "font_size": 12.5,
</span><span class='line'>  "theme": "Soda Light.sublime-theme"
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>




<br><br>


<h2>快捷键和插件</h2>

<table class="table table-bordered table-striped table-condensed">
   <tr>
      <td>Ctrl+L</td>
      <td>选择整行(按住-继续选择下行)</td>
   </tr>
   <tr>
      <td>Ctrl+KK</td>
        <td>从光标处删除至行尾<</td>
   </tr>
   <tr>
      <td>Ctrl+Shift+K</td>
        <td>删除整行</td>
   </tr>
   <tr>
      <td>Ctrl+Shift+D</td>
<td>复制光标所在整行，插入在该行之前</td>
   </tr>
   <tr>
      <td>Ctrl+J</td>
<td>合并行(已选择需要合并的多行时)</td>
   </tr>
   <tr>
      <td>Ctrl+KU</td>
<td>改为大写</td>
   </tr>
   <tr>
      <td>Ctrl+KL</td>
<td>改为小写</td>
   </tr>
   <tr>
      <td>Ctrl+D</td>
<td>选词(按住-继续选择下个相同的字符串)</td>
   </tr>
   <tr>
      <td>Ctrl+M</td>
<td>光标移动至括号内开始或结束的位置</td>
   </tr>
   <tr>
      <td>Ctrl+Shift+M</td>
<td>选择括号内的内容(按住-继续选择父括号)</td>
   </tr>
   <tr>
      <td>Ctrl+/</td>
<td>注释整行(如已选择内容，同“Ctrl+Shift+/”效果)</td>
   </tr>
   <tr>
      <td>Ctrl+Shift+/</td>
<td>注释已选择内容</td>
   </tr>
   <tr>
      <td>Ctrl+Space</td>
<td>自动完成(win与系统快捷键冲突，需修改)</td>
   </tr>
   <tr>
      <td>Ctrl+Z</td>
<td>撤销</td>
   </tr>
   <tr>
      <td>Ctrl+Y</td>
<td>恢复撤销<</td>
   </tr>
   <tr>
      <td>Ctrl+Shift+V</td>
<td>粘贴并自动缩进(其它兄弟写的，实测win系统自动缩进无效)</td>
   </tr>
   <tr>
      <td>Ctrl+M</td>
<td>光标跳至对应的括号</td>
   </tr>
   <tr>
      <td>Alt+.</td>
<td>闭合当前标签</td>
   </tr>
   <tr>
      <td>Ctrl+Shift+A</td>
<td>选择光标位置父标签对儿</td>
   </tr>
   <tr>
      <td>Ctrl+Shift+[</td>
<td>折叠代码</td>
   </tr>
   <tr>
      <td>Ctrl+Shift+]</td>
<td>展开代码</td>
   </tr>
   <tr>
      <td>Ctrl+KT</td>
<td>折叠属性</td>
   </tr>
   <tr>
      <td>Ctrl+K0</td>
<td>展开所有</td>
   </tr>
   <tr>
      <td>Ctrl+U</td>
<td>软撤销</td>
   </tr>
   <tr>
      <td>Ctrl+T</td><td>词互换</td>
   </tr>
   <tr>
      <td>Ctrl+Enter</td><td>插入行后</td>
   </tr>
   <tr>
      <td>Ctrl+Shift Enter</td><td>插入行前</td>
   </tr>
   <tr>
      <td>Ctrl+K Backspace</td><td>从光标处删除至行首</td>
   </tr>
   <tr>
      <td>Ctrl+Shift+UP</td><td>与上行互换</td>
   </tr>
   <tr>
      <td>Ctrl+Shift+DOWN</td><td>与下行互换</td>
   </tr>
   <tr>
      <td>Shift+Tab</td><td>去除缩进</td>
   </tr>
   <tr>
      <td>Tab</td>
<td>缩进</td>
   </tr>
   <tr>
      <td>F9</td>
<td>行排序(按a-z)</td>
   </tr>
</table>




<br><br>


<p>① 安装包控制（Package Control）</p>

<p>打开Sublime Text 2，按快捷键 <code>ctrl+</code> <code>或者点击</code>Tools → Command Palette` 调出控制台Console</p>

<p>将以下代码复制粘贴进命令行后回车：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>import urllib2,os; pf='Package Control.sublime-package'; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler())); open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read()); print 'Please restart Sublime Text to finish installation'  </span></code></pre></td></tr></table></div></figure>


<p>重新启动Sublime Text 2，如果在Preferences → Package Settings 中看到 Package Control 这一项，就说明安装成功了。</p>

<br><br>


<p>② 安装Alignment插件</p>

<p>对于喜欢整齐的玛民来说，这不失为一个省事的插件。该插件可以通过上面安装好的 Package Control 来安装：</p>

<p>按<code>ctrl + shift + P</code>调出命令面板；</p>

<p>输入 <code>install</code> 调出 <code>Package Control：Install Package</code> 选项，并回车；</p>

<p>输入<code>Alignment</code>，选中并按回车安装；</p>

<p>重启Sublime Text 2，选中文本并按<code>ctrl + alt + a</code> 就可以进行对齐操作了。</p>

<br><br>


<p>③ 安装 Soda 主题</p>

<p>这里的主题不同于针对代码的 color scheme，而是针对Sublime Text 2该软件本身的主题，该主题也可以通过万能的 Package Control 来安装。</p>

<p>按<code>ctrl + shift + P</code>调出命令面板；</p>

<p>输入 <code>install</code> 调出 <code>Package Control：Install Package</code> 选项，并回车；</p>

<p>输入 <code>theme soda</code> 选中后回车即可安装；</p>

<p>安装完之后要激活主题，打开 <code>Preferences → Global Settings – User</code>，加上以下代码保存即可生效：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>"theme": "Soda Light.sublime-theme"　或者　"theme" : "Soda Dark.sublime-theme"</span></code></pre></td></tr></table></div></figure>




<br><br>


<p>④ 安装cTags插件</p>

<p>首先，从Ctags官网下载压缩包下来，解压到电脑的某个地方，比如<code>C:\Program Files\ctags</code>，然后把cTags添加到系统变量里去：</p>

<p>在<code>我的电脑 右键属性 → 高级 → 环境变量 → 在“系统变量”里找到“Path”，点击“编辑” → 把C:\Program Files\ctags”（不包括双引号）复制到最后 → 最后一路“确定”保存</code>。</p>

<p>然后通过 <code>Package Control</code> 来安装 cTags 插件：</p>

<p>按<code>ctrl + shift + P</code>调出命令面板；</p>

<p>输入 <code>install</code> 调出 <code>Package Control：Install Package</code> 选项，并回车；</p>

<p>输入 <code>ctags</code> 选中后回车即可安装。</p>

<p>安装完之后，在项目的当前目录下按<code>ctrl + t, ctrl + r</code>，会生成.tags的文件。当光标停留在某个函数上时，按快捷键 <code>ctrl+t</code>, ctrl+t就可以打开函数所在的文件，并跳转到相应的位置了。</p>

<p>PS：安装这个插件折腾了我蛮久，主要是不知道还要从ctags官网下载压缩包，以及修改系统的变量，后来还是一博友给我发的国外的参考资料才知道要这样配置的。刚开始知道这软件之所以没用是因为没有像eclipse可以追踪函数的功能，后来才知道可以通过安装cTags插件来实现。装上此功能后，就更喜欢用Sublime Text 2了。</p>

<br><br>


<p>⑤ jsFormat插件</p>

<p>格式化js：选中一段文本，<code>control+alt+f</code>。</p>

<br><br>


<p>⑥ DocBlockr</p>

<p>在JS函数上方输入/**，然后回车，doc就生成好了非常好用。</p>

<br><br>


<p>⑦ sublime-jslint</p>

<p>打开一个js文件，<code>control+j</code>，即可输出jsLint检查的结果。打开Packages目录，找到插件目录sublime-jslint，打开<code>sublime-jslint.sublime-settings</code>文件，可以修改jsLint配置，还可以配置文件保存时自动检查等，如：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{ 
</span><span class='line'>// Path to the jslint jar. 
</span><span class='line'>// Leave blank to use bundled jar. "jslint_jar": "",   
</span><span class='line'>// Options pass to jslint. 
</span><span class='line'>// Jerry Qu注：全部可用配置参考这里，https://github.com/fbzhong/sublime-jslint/wiki/Available-jslint4java-options "jslint_options": "--encoding utf-8 --bitwise --browser --cap --css --devel --debug --evil --forin --fragment --on --sub --white --windows --sloppy",   
</span><span class='line'>// Ignore errors, regex. "ignore_errors": [ // "Expected an identifier and instead saw 'undefined' \(a reserved word\)" ],   
</span><span class='line'>// run jslint on save. "run_on_save": false,   
</span><span class='line'>// debug flag. "debug": false 
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>




<br><br>


<p>⑧ SideBarEnhancements
推荐通过 <code>Package Control</code> 安装 <code>SideBarEnhancements</code> 这个插件，可以大大加强在侧栏目录树中右键的选项</p>

<br><br>


<p>⑨ Zen Coding</p>

<br><br>


<p>⑩ jQuery Package for sublime Text</p>

<br><br>


<p>⑪ Clipboard History</p>

<br><br>


<p>⑫ Bracket Highlighter</p>

<br><br>


<p>⑬ GBK to UTF8</p>

<br><br>


<p>⑭ Git</p>

<br><br>


<p>⑮ JsMinifier</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[渐变的旋转进度条]]></title>
    <link href="http://boia.github.com/blog/2013/04/23/process/"/>
    <updated>2013-04-23T16:34:00+08:00</updated>
    <id>http://boia.github.com/blog/2013/04/23/process</id>
    <content type="html"><![CDATA[<h2>简介</h2>

<p>这两天公司在做手机管家，很意外也是第一次听说公司的手机管家是用JS写的，然后各种费解(又一次无知了)。正巧对canvas有一些见解，所以永哥叫我画一个随杀毒变化的圆形进度条，然后就不废话，直接上图吧。<br></p>

<p><img width="200" class="left half" src="http://boia.github.com/images/post/process.jpg" title="进度条" alt="进度条!"><br><br></p>

<!-- more -->


<h2>jsfiddle上效果</h2>

<p>先在jsfiddle中看看效果</p>

<iframe style="width: 100%; height: 480px" src="http://jsfiddle.net/DbGPe/embedded/result,js,html,css/presentation/"></iframe>




<br><br>


<h2>代码分析</h2>

<p>① 如何取得进度条上的值</p>

<p>在杀毒的正式版本中，后台会给我发实时变化的数据，因为我在调试，所以自己加了进度条控件
<code>&lt;input type="range" value="60" id="range" /&gt;</code>，在Chrome浏览器上是一个可以左右拉并且有范围的控件。</p>

<p>获得控件上的值只要用DOM的getElementById方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">range</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;range&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">num1</span> <span class="o">=</span> <span class="nb">parseInt</span><span class="p">(</span><span class="nx">range</span><span class="p">.</span><span class="nx">value</span><span class="p">);</span>
</span><span class='line'><span class="nx">range</span><span class="p">.</span><span class="nx">onchange</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>  <span class="nx">num1</span> <span class="o">=</span> <span class="nb">parseInt</span><span class="p">(</span><span class="nx">range</span><span class="p">.</span><span class="nx">value</span><span class="p">);</span>   
</span><span class='line'>  <span class="nx">move</span><span class="p">(</span><span class="nx">point</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>我这里因为是测试版本，所以用了num1命名，不建议你写代码用这些没有意义的命名，num1实际上就是查毒时你得的分数，这里千万要注意的是用range.value获得类型是字符串的，但咱们需要的是一个int类型的，所以你可以用<code>new Number(range.value)</code>或者<code>parseInt(range.value)</code>两种方法将字符串转化为整数类型。你先别考虑move(point)这个函数调用。这里特别要强调的是range.onchange，这其实是控件改变时触发事件，这个事件也很管用，很多网站注册账号时，当你输入一个新的账号，他就能立刻将数据返回到后台，查询数据库，进行验证。</p>

<br>


<p>② 初始化</p>

<p>其实第一步咱们需要进行一些初始化</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span>    <span class="nx">canvas</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;mycanvas&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span>   <span class="nx">ctx</span> <span class="o">=</span> <span class="nx">canvas</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s1">&#39;2d&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">100</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">y</span> <span class="o">=</span> <span class="mi">100</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">r</span> <span class="o">=</span> <span class="mi">40</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">ringWidth</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>       
</span><span class='line'><span class="kd">var</span> <span class="nx">num</span> <span class="o">=</span> <span class="nx">num1</span><span class="p">;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">point</span> <span class="o">=</span> <span class="mi">50</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>(x,y,r,ringwidth)依次对应(旋转条相对于canvas的圆心坐标，圆心半径，圆环宽度)，因为在函数中咱可能会重复用到，所以咱们命名了变量。point是一个实时变化的分数，动画效果是逐渐+1或者-1来实现的，用一个point咱可以随意地操作进度条。num咱们在函数中介绍。</p>

<br>


<p>③ 动画函数</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">move</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">point</span><span class="p">){</span>
</span><span class='line'>      <span class="nx">num</span> <span class="o">=</span> <span class="nx">num1</span><span class="p">;</span>
</span><span class='line'>      <span class="cm">/*每次画图先将图像擦除*/</span>
</span><span class='line'>      <span class="nx">ctx</span><span class="p">.</span><span class="nx">clearRect</span><span class="p">(</span><span class="nx">x</span><span class="o">-</span><span class="nx">r</span><span class="o">-</span><span class="mi">5</span><span class="p">,</span><span class="nx">y</span><span class="o">-</span><span class="nx">r</span><span class="o">-</span><span class="mi">5</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="p">(</span><span class="nx">r</span><span class="o">+</span><span class="mi">5</span><span class="p">),</span><span class="mi">2</span><span class="o">*</span><span class="p">(</span><span class="nx">r</span><span class="o">+</span><span class="mi">5</span><span class="p">));</span>
</span><span class='line'>      
</span><span class='line'>      <span class="cm">/*画圆环*/</span>
</span><span class='line'>      <span class="nx">ctx</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span>
</span><span class='line'>      <span class="nx">ctx</span><span class="p">.</span><span class="nx">fillStyle</span> <span class="o">=</span> <span class="s2">&quot;transparent&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">ctx</span><span class="p">.</span><span class="nx">arc</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">r</span><span class="o">+</span><span class="nx">ringWidth</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">ctx</span><span class="p">.</span><span class="nx">fill</span><span class="p">();</span>
</span><span class='line'>      <span class="nx">ctx</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span>
</span><span class='line'>      <span class="nx">ctx</span><span class="p">.</span><span class="nx">fillStyle</span> <span class="o">=</span> <span class="s2">&quot;transparent&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">ctx</span><span class="p">.</span><span class="nx">arc</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">r</span><span class="o">-</span><span class="nx">ringWidth</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">);</span>    
</span><span class='line'>      <span class="nx">ctx</span><span class="p">.</span><span class="nx">fill</span><span class="p">();</span>   
</span><span class='line'>      <span class="nx">ctx</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span>
</span><span class='line'>      <span class="nx">ctx</span><span class="p">.</span><span class="nx">lineWidth</span> <span class="o">=</span> <span class="nx">ringWidth</span><span class="p">;</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">angle</span> <span class="o">=</span> <span class="mf">1.5</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">-</span><span class="nx">point</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">50</span><span class="p">;</span>
</span><span class='line'>      
</span><span class='line'>      <span class="cm">/*canvas中只有线性渐变和放射型渐变，我还没想出好的方法，所以讲圆分成了左右两个半圆来处理*/</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">leftGrad</span><span class="p">,</span><span class="nx">rightGrad</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="cm">/*每个分值都会有不同的渐变*/</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="nx">point</span> <span class="o">&lt;=</span> <span class="mi">50</span><span class="p">){</span>
</span><span class='line'>          <span class="nx">leftGrad</span> <span class="o">=</span>   <span class="nx">ctx</span><span class="p">.</span><span class="nx">createLinearGradient</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">-</span><span class="nx">r</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">+</span><span class="nx">r</span><span class="p">);</span>
</span><span class='line'>          <span class="nx">leftGrad</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="mf">0.1</span><span class="p">,</span><span class="s1">&#39;#ff5151&#39;</span><span class="p">);</span>   <span class="c1">// 红</span>
</span><span class='line'>          <span class="nx">leftGrad</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="mf">0.5</span><span class="p">,</span><span class="s1">&#39;#ECD806&#39;</span><span class="p">);</span>   <span class="c1">// 黄</span>
</span><span class='line'>          <span class="nx">leftGrad</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="s1">&#39;#dfd706&#39;</span><span class="p">);</span>     <span class="c1">// 黄</span>
</span><span class='line'>          <span class="nx">ctx</span><span class="p">.</span><span class="nx">strokeStyle</span> <span class="o">=</span> <span class="nx">leftGrad</span><span class="p">;</span>
</span><span class='line'>          <span class="nx">ctx</span><span class="p">.</span><span class="nx">arc</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="mf">1.5</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">,</span><span class="nx">angle</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">point</span> <span class="o">&lt;=</span> <span class="mi">70</span><span class="p">){</span>
</span><span class='line'>          <span class="nx">leftGrad</span> <span class="o">=</span>   <span class="nx">ctx</span><span class="p">.</span><span class="nx">createLinearGradient</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">-</span><span class="nx">r</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">+</span><span class="nx">r</span><span class="p">);</span>          
</span><span class='line'>          <span class="nx">leftGrad</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="mf">0.1</span><span class="p">,</span><span class="s1">&#39;#ff5151&#39;</span><span class="p">);</span>   <span class="c1">// 红</span>
</span><span class='line'>          <span class="nx">leftGrad</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="mf">0.5</span><span class="p">,</span><span class="s1">&#39;#ECD806&#39;</span><span class="p">);</span>   <span class="c1">// 黄 </span>
</span><span class='line'>          <span class="nx">leftGrad</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="mf">0.8</span><span class="p">,</span><span class="s1">&#39;#dfd706&#39;</span><span class="p">);</span>   <span class="c1">// 黄 </span>
</span><span class='line'>          <span class="nx">leftGrad</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="s1">&#39;#7FCF00&#39;</span><span class="p">);</span>     <span class="c1">//绿</span>
</span><span class='line'>          <span class="nx">ctx</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span>
</span><span class='line'>          <span class="nx">ctx</span><span class="p">.</span><span class="nx">strokeStyle</span> <span class="o">=</span> <span class="nx">leftGrad</span><span class="p">;</span>        
</span><span class='line'>          <span class="nx">ctx</span><span class="p">.</span><span class="nx">arc</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="mf">1.5</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">,</span><span class="mf">0.5</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span>
</span><span class='line'>          <span class="nx">ctx</span><span class="p">.</span><span class="nx">stroke</span><span class="p">();</span>
</span><span class='line'>          <span class="nx">ctx</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span>
</span><span class='line'>          <span class="nx">rightGrad</span> <span class="o">=</span> <span class="nx">ctx</span><span class="p">.</span><span class="nx">createLinearGradient</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="nx">ringWidth</span><span class="o">/</span><span class="mf">2.5</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="p">);</span>
</span><span class='line'>          <span class="nx">rightGrad</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="mf">0.2</span><span class="p">,</span><span class="s1">&#39;#7FCF00&#39;</span><span class="p">);</span>  <span class="c1">//绿</span>
</span><span class='line'>          <span class="nx">ctx</span><span class="p">.</span><span class="nx">strokeStyle</span> <span class="o">=</span> <span class="nx">rightGrad</span><span class="p">;</span>
</span><span class='line'>          <span class="nx">ctx</span><span class="p">.</span><span class="nx">arc</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="mf">0.5</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">,</span><span class="nx">angle</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">point</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="p">){</span>
</span><span class='line'>          <span class="nx">leftGrad</span> <span class="o">=</span>   <span class="nx">ctx</span><span class="p">.</span><span class="nx">createLinearGradient</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">-</span><span class="nx">r</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">+</span><span class="nx">r</span><span class="p">);</span>          
</span><span class='line'>          <span class="nx">leftGrad</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="mf">0.1</span><span class="p">,</span><span class="s1">&#39;#ff5151&#39;</span><span class="p">);</span>   <span class="c1">// 红</span>
</span><span class='line'>          <span class="nx">leftGrad</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="mf">0.5</span><span class="p">,</span><span class="s1">&#39;#ECD806&#39;</span><span class="p">);</span>   <span class="c1">// 黄 </span>
</span><span class='line'>          <span class="nx">leftGrad</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="mf">0.8</span><span class="p">,</span><span class="s1">&#39;#dfd706&#39;</span><span class="p">);</span>   <span class="c1">// 黄</span>
</span><span class='line'>          <span class="nx">leftGrad</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="s1">&#39;#7FCF00&#39;</span><span class="p">);</span>
</span><span class='line'>          <span class="nx">ctx</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span>
</span><span class='line'>          <span class="nx">ctx</span><span class="p">.</span><span class="nx">strokeStyle</span> <span class="o">=</span> <span class="nx">leftGrad</span><span class="p">;</span>        
</span><span class='line'>          <span class="nx">ctx</span><span class="p">.</span><span class="nx">arc</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="mf">1.5</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">,</span><span class="mf">0.5</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span>
</span><span class='line'>          <span class="nx">ctx</span><span class="p">.</span><span class="nx">stroke</span><span class="p">();</span>
</span><span class='line'>          <span class="nx">ctx</span><span class="p">.</span><span class="nx">beginPath</span><span class="p">();</span>
</span><span class='line'>          <span class="nx">rightGrad</span> <span class="o">=</span> <span class="nx">ctx</span><span class="p">.</span><span class="nx">createLinearGradient</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">+</span><span class="nx">r</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="p">);</span>
</span><span class='line'>          <span class="nx">rightGrad</span><span class="p">.</span><span class="nx">addColorStop</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="s1">&#39;#7FCF00&#39;</span><span class="p">);</span>  <span class="c1">//绿</span>
</span><span class='line'>          <span class="nx">ctx</span><span class="p">.</span><span class="nx">strokeStyle</span> <span class="o">=</span> <span class="nx">rightGrad</span><span class="p">;</span>
</span><span class='line'>          <span class="nx">ctx</span><span class="p">.</span><span class="nx">arc</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="mf">0.5</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">,</span><span class="nx">angle</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span>        
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">point</span> <span class="o">===</span> <span class="mi">100</span><span class="p">){</span>
</span><span class='line'>          <span class="nx">ctx</span><span class="p">.</span><span class="nx">strokeStyle</span> <span class="o">=</span> <span class="s2">&quot;#7FCF00&quot;</span><span class="p">;</span>
</span><span class='line'>          <span class="nx">ctx</span><span class="p">.</span><span class="nx">arc</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span>          
</span><span class='line'>      <span class="p">}</span>    
</span><span class='line'>      <span class="nx">ctx</span><span class="p">.</span><span class="nx">stroke</span><span class="p">();</span>
</span><span class='line'>      <span class="cm">/*当动画的分数小于杀毒分数时，动画分数增加*/</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="nx">num</span> <span class="o">&gt;</span> <span class="nx">point</span><span class="p">){</span>
</span><span class='line'>          <span class="nx">point</span><span class="o">++</span><span class="p">;</span>      
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="cm">/*当动画的分数大于杀毒分数时，动画分数减小*/</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="nx">num</span> <span class="o">&lt;</span> <span class="nx">point</span><span class="p">){</span>
</span><span class='line'>          <span class="nx">point</span><span class="o">--</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="cm">/*实现动画*/</span>
</span><span class='line'>      <span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>          <span class="nx">move</span><span class="p">(</span><span class="nx">point</span><span class="p">);</span>
</span><span class='line'>      <span class="p">},</span><span class="mi">30</span><span class="p">);</span>    
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>再次说明尽量不要这样写函数，我本来是想拿出一个对象来讲的，我这样写的规范完全是蒙蔽了初学者，所以尽量不要照搬代码，我这里只是说思想罢了。</p>

<p>在移动控件的时候，动画会有抖动，我分析应该是因为控件的变化是实时的，像mousemove那样，超过了动画的帧，造成了抖动。在查毒测试中，是没有这样抖动的。</p>

<br>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gvim命令大全]]></title>
    <link href="http://boia.github.com/blog/2013/04/21/gvim-order/"/>
    <updated>2013-04-21T11:21:00+08:00</updated>
    <id>http://boia.github.com/blog/2013/04/21/gvim-order</id>
    <content type="html"><![CDATA[<h2>开始gvim</h2>

<p>听说大神都用vim，耐不住寂寞，也班门弄斧搞了个gvim，对它的命令也不是特别熟练，我只好将它的命令记在博客里，以便日后能够查看。俗~~~~</p>

<!-- more -->


<br><br>


<h2>操纵文件</h2>

<p>Vim命令                            动作</p>

<p>:e filename   打开一个新文件，可以用TAB键自动补全</p>

<p>:w filename   保存更改。如果不指定文件名，Vim会存为你正在编辑的文件。如果要存为不同的文件，需要指定文件名</p>

<p>:q            退出Vim。如果有未保存的更改，Vim会拒绝退出。</p>

<p>:q!           强制退出！</p>

<p>:wq           写文件并退出</p>

<p>:x            几乎和:wq一样，如果你修改了文件，它会写文件并退出。如果你没有修改文件，Vim会不写文件直接退出。</p>

<br><br> 


<h2>文件内的移动</h2>

<p>These Vim commands and keys work both in command mode and visual mode.</p>

<p>Vim命令                            动作</p>

<p>j or Up Arrow            向上移动一行</p>

<p>k or Down Arrow          向下移动一行</p>

<p>l or Right Arrow         向右移动一个字符</p>

<p>h or Left Arrow          向左移动一个字符</p>

<p>e                        移动到一个词（word）尾</p>

<p>E                        移动到白空格（whitespace）分隔的词尾</p>

<p>b                        移动到一个词（word）的开头</p>

<p>B                        移动到白空格（whitespace）分隔的词头</p>

<p>0                        移动到行首</p>

<p>^                        移动到一行的首个非白空格的字符</p>

<p>$                        移动到行尾</p>

<p>H                        移动到屏幕的第一行</p>

<p>M                        移动到屏幕的中间一行</p>

<p>L                        移动到屏幕的最后一行</p>

<p>:n                       跳至屏幕的第n行</p>

<br><br>


<h2>插入和替换文本</h2>

<p>Vim命令                     动作</p>

<p>i                        在光标之前插入</p>

<p>I                        在该行行首插入</p>

<p>a                        在光标之后插入</p>

<p>A                        在该行行尾插入</p>

<p>o                        在下一行新建一行并插入</p>

<p>O                        在上一行新建一行并插入</p>

<p>C                        Change the rest of the current line.</p>

<p>r                        覆盖一个字符。在覆盖完成以后，回到命令模式。</p>

<p>R                        进入插入模式，但是不再是插入文本，而是覆盖文本。跟word里insert键的作用类似</p>

<p>ESC                      退出插入/改写 模式，回到命令模式。</p>

<br><br>


<h2>删除文本</h2>

<p>Vim命令                     动作</p>

<p>x                       删除光标后的字符</p>

<p>X                       删除光标前的字符</p>

<p>dd or :d                删除当前行</p>

<br><br>


<h2>进入可视模式（Visual mode）</h2>

<p>Vim命令                                 动作</p>

<p>v                       开始定义高亮字符，用定位键（j or 向下键等）来选择要高亮的文本。</p>

<p>V                       开始定义高亮行。</p>

<p>ESC                     退出可视模式(visual mode)并返回命令模式</p>

<br><br>


<h2>编辑块文本</h2>

<p>The Vim commands marked with (V) work in visual mode, when you&#8217;ve selected some text. The other commands work in the command mode, when you haven&#8217;t selected any text.</p>

<p>Vim命令                                 动作</p>

<p>~                       改变字符的大小写。在命令模式和可视模式下都可以工作。在可视模式下，它用来改变高亮文本的大小写。在命令模式下，改变光标处字符的大小写。</p>

<blockquote><p>(V)                   右移</p></blockquote>

<p>&lt; (V)                   左移</p>

<p>c (V)                   改变高亮的文本</p>

<p>y (V)                   拖动（Yank）高亮的文本。在Windows术语中叫做：拷贝选定的文本到剪切板</p>

<p>d (V)                   删除高亮文本。</p>

<p>yy or :y or Y           拖动（yank）当前行，你不必首先高亮该行。</p>

<p>dd or :d                删除当前行。同样，你不必先高亮该行。</p>

<p>p                       在windows术语中，“粘贴”“剪切板”的内容。在Vim术语中，你“放置”“拖动（yank）”或删除的文本。如果是字符则放在光标后面，如果是行则放在当前行下面。</p>

<p>P                       如果是字符则放在光标前面，如果是行则放在当前行上面。</p>

<br><br>


<h2>撤销（undo）和重做（redo）</h2>

<p>Vim命令                     动作</p>

<p>u                       撤销上一个动作</p>

<p>U                       撤销所有最近针对该行的更改。</p>

<p>Ctrl + r                重做</p>

<br><br>


<h2>搜索</h2>

<p>Vim命令                          动作</p>

<p>/pattern                根据模式(pattern)搜索文件。</p>

<p>n                       搜索同方向的下一个匹配。</p>

<p>N                       搜索反方向的下一个匹配。</p>

<br><br>


<h2>替换</h2>

<p>Vim命令                             动作</p>

<p>:rs/foo/bar/a           用bar来替换foo。r确定替换的范围，a确定替换的参数。
替换范围（r）可以是：
空白（nothing）     只在当前行起作用
数字（number）      在你指定的哪一行起作用</p>

<p>%                   整个文件
参数（a）可以是：</p>

<p>g                  替换该行内所有的匹配。如果不要该参数，Vim仅仅替换第一次的匹配。</p>

<p>i                  在搜索模式中忽略大小写。</p>

<p>I                  不忽略大小写。</p>

<p>c                  对每一次替换都确认。你可以键入y来替换这次匹配，n去跳过这次匹配，或者a来替换所有剩下的匹配，或者q来退出替换。</p>

<br><br>


<h2>例子：</h2>

<p>:452s/foo/bar/</p>

<p>替换第452行首次出现的foo为bar。</p>

<p>:s/foo/bar/g</p>

<p>替换当前行中所有出现的foo为bar</p>

<p>:%s/foo/bar/g</p>

<p>替换整个文件中所有出现的foo为bar</p>

<p>:%s/foo/bar/gi</p>

<p>和上面一样，不过忽略大小写。</p>

<p>:%s/foo/bar/gc</p>

<p>和第三个一样，不过每次替换都要确认。</p>

<p>:%s/foo/bar/c</p>

<p>对文件的每一行，替换foo的首次出现为bar并且每次替换都要确认。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[全面解析ubuntu下安装php、pear]]></title>
    <link href="http://boia.github.com/blog/2013/04/13/ubuntu-php/"/>
    <updated>2013-04-13T14:42:00+08:00</updated>
    <id>http://boia.github.com/blog/2013/04/13/ubuntu-php</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<p>因为在windows下搞pear没有成功，老出现无缘无故的问题，所以今天用ubuntu搭建了一个php。众所周知开源代码和linux总是有无懈的缘分，而我作为一个开源的忠实粉丝，却还抱着windows系统不放，总有些惭愧，下一个wamp毫无技术可言就搞定了。少说废话，下面就开始。</p>

<!-- more -->


<br><br>


<h2>ubuntu搭建php</h2>

<p>① apache2</p>

<ul>
<li><code>sudo apt-get install apache2</code></li>
</ul>


<p>&#8230;大概几秒钟时间</p>

<p>打开浏览器输入http://localhost/</p>

<p>it works总是令人那么激动，只是你还有很多东西要做<br><br></p>

<p>② PHP5</p>

<ul>
<li><p><code>sudo apt-get install php5</code></p></li>
<li><p><code>sudo apt-get install libapache2-mod-php5</code></p></li>
<li><p><code>sudo /etc/init.d/apache2 restart</code></p></li>
</ul>


<p>然后php应该被安装到了<code>/etc/php5/</code>下</p>

<p>试试 <code>php -v</code></p>

<p>查询到PHP 5.4.6<br><br></p>

<p>③ MySql</p>

<ul>
<li><code>sudo apt-get install mysql-server</code></li>
</ul>


<p>MySql初始只允许本机(127.0.0.1)连接，如果想多台机子使用或者向Internet开放的话，编辑/etc/mysql/my.cnf</p>

<ul>
<li><code>sudo gedit /etc/mysql/my.cnf</code></li>
</ul>


<p>找到<code>bind-address = 127.0.0.1</code> 在前面加一个&#8217;#&#8217;注释掉<br><br></p>

<p>④ MySql Administrator</p>

<ul>
<li><code>sudo apt-get install mysql-admin</code></li>
</ul>


<p>不知道为啥这个命令没有成功，如果你也不行，可以试下下面的命令</p>

<ul>
<li><code>sudo apt-get install libapache2-mod-auth-mysql</code></li>
<li><code>sudo apt-get install php5-mysql</code></li>
<li><code>sudo apt-get install phpmyadmin</code></li>
</ul>


<p>要让PHP与MySql一起工作，编辑</p>

<ul>
<li><code>sudo gedit /etc/php5/apache2/php.ini</code></li>
</ul>


<p>取消对;extension=mysql.so的注释</p>

<p>重启apache</p>

<ul>
<li><code>sudo /etc/init.d/apache2 restart</code></li>
</ul>


<p>打开浏览器输入<code>http://localhost/phpmyadmin</code>，我在这里输的时候，出现了一个问题</p>

<blockquote>
Not Found
The requested URL /phpmyadmin/ was not found on this server.
Apache/2.2.14 (Ubuntu) Server at localhost Port 80
</blockquote>


<p>然后各种纠结，百度了以后才知道得让phpAdministrator和php建立一个软连接</p>

<p>打开<code>var/www</code></p>

<ul>
<li><code>sudo ln -s /usr/share/phpmyadmin</code><br><br></li>
</ul>


<p>⑤ pear</p>

<p>下载pear在php中是一个很简单的事情，只要输入一行代码</p>

<ul>
<li><code>curl -o go-pear.php http://pear.php.net/go-pear</code></li>
</ul>


<p>如果你没有按curl，请输入一行命令</p>

<ul>
<li><code>sudo apt-get install curl libcurl3 libcurl3-dev php5-curl</code></li>
</ul>


<p>重启下服务器</p>

<ul>
<li><code>sudo /etc/init.d/apache2 restart</code><br><br></li>
</ul>


<p>⑥ 运行go-pear.php</p>

<p>找到<code>go-pear.php</code></p>

<ul>
<li><code>php go-pear.php</code><br><br></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>1. Installation base ($prefix)                   : /usr/local/php5
</span><span class='line'>2. Temporary directory for processing            : /tmp/pear/install
</span><span class='line'>3. Temporary directory for downloads             : /tmp/pear/install
</span><span class='line'>4. Binaries directory                            : /usr/local/php5/bin
</span><span class='line'>5. PHP code directory ($php_dir)                 : /usr/local/php5/lib/php
</span><span class='line'>6. Documentation directory                       : /usr/local/php5/docs
</span><span class='line'>7. Data directory                                : /usr/local/php5/data
</span><span class='line'>8. User-modifiable configuration files directory : /usr/local/php5/cfg
</span><span class='line'>9. Public Web Files directory                    : /usr/local/php5/www
</span><span class='line'>10. Tests directory                               : /usr/local/php5/tests
</span><span class='line'>11. Name of configuration file                    : /usr/local/php5/etc/pear.conf
</span><span class='line'>1-11, ‘all’ or Enter to continue:
</span><span class='line'>Beginning install…
</span><span class='line'>Configuration written to /usr/local/php5/etc/pear.conf…
</span><span class='line'>Initialized registry…
</span><span class='line'>Preparing to install…
</span><span class='line'>installing phar://go-pear.phar/PEAR/go-pear-tarballs/Archive_Tar-1.3.7.tar…
</span><span class='line'>installing phar://go-pear.phar/PEAR/go-pear-tarballs/Console_Getopt-1.3.0.tar…
</span><span class='line'>installing phar://go-pear.phar/PEAR/go-pear-tarballs/PEAR-1.9.4.tar…
</span><span class='line'>installing phar://go-pear.phar/PEAR/go-pear-tarballs/Structures_Graph-1.0.4.tar…
</span><span class='line'>installing phar://go-pear.phar/PEAR/go-pear-tarballs/XML_Util-1.2.1.tar…
</span><span class='line'>install ok: channel://pear.php.net/Archive_Tar-1.3.7
</span><span class='line'>install ok: channel://pear.php.net/Console_Getopt-1.3.0
</span><span class='line'>install ok: channel://pear.php.net/Structures_Graph-1.0.4
</span><span class='line'>install ok: channel://pear.php.net/XML_Util-1.2.1
</span><span class='line'>install ok: channel://pear.php.net/PEAR-1.9.4
</span><span class='line'>PEAR: Optional feature webinstaller available (PEAR’s web-based installer)
</span><span class='line'>PEAR: Optional feature gtkinstaller available (PEAR’s PHP-GTK-based installer)
</span><span class='line'>PEAR: Optional feature gtk2installer available (PEAR’s PHP-GTK2-based installer)
</span><span class='line'>PEAR: To install optional features use “pear install pear/PEAR#featurename”
</span><span class='line'>** WARNING! Old version found at /usr/local/php5/bin, please remove it or be sure to use the new /usr/local/php5/bin/pear command
</span><span class='line'>The ‘pear’ command is now at your service at /usr/local/php5/bin/pear
</span><span class='line'>** The ‘pear’ command is not currently in your PATH, so you need to
</span><span class='line'>** use ‘/usr/local/php5/bin/pear’ until you have added
</span><span class='line'>** ‘/usr/local/php5/bin’ to your PATH environment variable.
</span><span class='line'>Run it without parameters to see the available actions, try ‘pear list’
</span><span class='line'>to see what packages are installed, or ‘pear help’ for help.
</span><span class='line'>For more information about PEAR, see:
</span><span class='line'>http://pear.php.net/faq.php
</span><span class='line'>http://pear.php.net/manual/
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[cross-domain request]]></title>
    <link href="http://boia.github.com/blog/2013/04/11/cross-domain-request/"/>
    <updated>2013-04-11T16:31:00+08:00</updated>
    <id>http://boia.github.com/blog/2013/04/11/cross-domain-request</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[apache虚拟主机的设置]]></title>
    <link href="http://boia.github.com/blog/2013/04/09/virtual/"/>
    <updated>2013-04-09T10:59:00+08:00</updated>
    <id>http://boia.github.com/blog/2013/04/09/virtual</id>
    <content type="html"><![CDATA[<p>因为需要测试ajax的跨域操作，所以在本地搭建一个虚拟服务器，也碰到一些问题，不过最终还是解决了，如果你也想搭建虚拟服务器，可以按以下步骤进行操作。</p>

<!-- more -->


<br><br>


<h2>httpd-vhosts.conf</h2>

<p>找到<code>httpd-vhosts.conf</code>，我的文件在<code>F:\Software\wamp\bin\apache\apache2.2.22\conf\extra</code>下，作为一个coder分工总是令人蛋疼地明确，理所当然，你也可以直接在<code>httpd.conf</code>中设置，不过我建议你不要这么做。</p>

<p>将里面的内容用&#8221;#&#8221;全部注释掉，然后加入以下内容</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;VirtualHost 127.0.0.2:8080&gt;
</span><span class='line'>    DocumentRoot F:/Software/wamp/virtual
</span><span class='line'>   ServerName virtual
</span><span class='line'>
</span><span class='line'> DirectoryIndex index.html
</span><span class='line'>&lt;Directory "F:/Software/wamp/virtual"&gt;
</span><span class='line'>    Options Indexes FollowSymLinks
</span><span class='line'>    AllowOverride None
</span><span class='line'>    Order allow,deny
</span><span class='line'>    Allow from all
</span><span class='line'>&lt;/Directory&gt;
</span><span class='line'>&lt;/VirtualHost&gt;</span></code></pre></td></tr></table></div></figure>


<p>因为这里端口我用了8080，如果你是80的话，你就要写成127.0.0.2:80，DocumentRoot是你虚拟主机的根目录，这里我就不多说了。</p>

<h2>httpd-conf</h2>

<p>我一开始以为只要在<code>httpd-vhosts.conf</code>改了就可以了，没想到主配置文件没有包含，找到<code>Include conf/extra/httpd-vhosts.conf</code>，将前面的&#8221;#&#8221;去掉。</p>

<br><br>


<h2>hosts</h2>

<p>最后一步了，如果你玩过代理翻墙，那么你就可能会知道(不排除你用自由门)需要在hosts文件中修改IP指向那个你需要翻墙的网址，这里咱们就要设置一下将IP指向咱们的虚拟目录。添加以下内容</p>

<p>127.0.0.2       virtual<br><br></p>

<h2>You don&#8217;t have permission to access / on this server.</h2>

<p>这里提一个小插曲，你可以会被服务器拒绝说没有权限，在httpd-conf的文件中找到</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;Directory /&gt;
</span><span class='line'>    Options FollowSymLinks
</span><span class='line'>    AllowOverride None
</span><span class='line'>    Order deny,allow
</span><span class='line'>    Deny from all 
</span><span class='line'>&lt;/Directory&gt;</span></code></pre></td></tr></table></div></figure>


<br>


<p>改成</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;Directory /&gt;
</span><span class='line'>    Options Indexes FollowSymLinks
</span><span class='line'>    AllowOverride None
</span><span class='line'>&lt;/Directory&gt;</span></code></pre></td></tr></table></div></figure>


<br><br>


<p>OK！！！重启一下开始新的旅程吧</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gvim中文乱码的解决方法以及一些简单配置]]></title>
    <link href="http://boia.github.com/blog/2013/04/08/gvim/"/>
    <updated>2013-04-08T17:11:00+08:00</updated>
    <id>http://boia.github.com/blog/2013/04/08/gvim</id>
    <content type="html"><![CDATA[<h2>初试Vim</h2>

<p>因为笔记本没有按ubuntu，所以在windows系统中只好按gvim，我的版本是<a href="" title="http://119.147.99.43/gdown_group133/M00/0B/06/d5NjK05l5fIAAAAAAJEId3VUWeE9186457/gvim73_46.rar?k=tk1dDKwISpJv7ImuVmeyoA&amp;t=1365409424&amp;u=3683547893-75501363-eielyukb&amp;s=307200&amp;file=gvim73_46.rar">gvim7.346</a>，如果你也碰到了中文编码问题的话，可以按我说的去解决。</p>

<!-- more -->


<br><br>


<h2>打开_vimrc</h2>

<p>打开<code>_vimrc</code>这个文件，这个文件在你安装gvim的根目录可以找到，然后用编译器打开，最好别用记事本。</p>

<br><br>


<h2>添加配置</h2>

<p>set encoding=utf-8</p>

<p>set fileencodings=utf-8,gbk,gb18030,gk2312</p>

<p>&#8220;解决菜单乱码&#8221;</p>

<p>source $VIMRUNTIME/delmenu.vim</p>

<p>source $VIMRUNTIME/menu.vim</p>

<p>&#8220;解决consle输出乱码&#8221;</p>

<p>language messages zh_CN.utf-8</p>

<p>&#8220;打开语法高亮&#8221;</p>

<p>syntax on</p>

<p>&#8220;gvim 配色方案&#8221;</p>

<p>colorscheme torte</p>

<p>OK，做得好！！！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WARN Could not determine content-length of response body.Set content-length of the response or set Response#chunked = true]]></title>
    <link href="http://boia.github.com/blog/2013/03/28/set-response/"/>
    <updated>2013-03-28T16:55:00+08:00</updated>
    <id>http://boia.github.com/blog/2013/03/28/set-response</id>
    <content type="html"><![CDATA[<h2>rake preview</h2>

<p>今天rake preview的时候出现了一个警告，应该是我用iframe的时候去获得其他源的时候出现的问题，因为对ruby很浅的了解，所以只能发挥我seo的本领，最终还是解决了。</p>

<!-- more -->


<br><br>


<p>错误是这样的,如下图所示</p>

<p><img src="http://boia.github.com/images/post/response.png" title="set response" ><br></p>

<p>杜绝一切警告和错误是一个良好coder的优秀品质，因为coder固有的强迫症，有一个警告都是不允许的事情，改之义不容缓。<br></p>

<p>找到<code>F:software\Ruby193\lib\ruby\1.9.1\webrick\httpresponse.rb</code>,你别跟我说你找不到路径&#8230;<br><br></p>

<p>在205行，你能看到<code>if chunked? || @header['content-length']</code><br><br></p>

<p>只要改成<code>if chunked? || @header['content-length'] || @status == 304 || @status == 204</code>  就行了，不要问我为什么？我真的不懂。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jquery-flot教程]]></title>
    <link href="http://boia.github.com/blog/2013/03/28/flot-course1/"/>
    <updated>2013-03-28T13:39:00+08:00</updated>
    <id>http://boia.github.com/blog/2013/03/28/flot-course1</id>
    <content type="html"><![CDATA[<!-- more -->


<p><link href="http://boia.github.com/stylesheets/custom.css" media="screen,projection" rel="stylesheet" type="text/css"></p>

<iframe class="articlebox" width="600" height="400" src="http://boia.github.com/course/jQuery/flot/examples/index.html" sandbox></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[纪念地球节电一小时]]></title>
    <link href="http://boia.github.com/blog/2013/03/24/ditiejiedian/"/>
    <updated>2013-03-24T16:18:00+08:00</updated>
    <id>http://boia.github.com/blog/2013/03/24/ditiejiedian</id>
    <content type="html"><![CDATA[<h2>2013-3-23 节电</h2>

<p>世界自然基金会在2007年向全球发出的一项倡议：就是在每年三月的最后一个星期六20：30~21：30期间熄灯1小时，为了纪念这个活动，我用CSS3+JS代码模拟了一个节电活动，如果你是IE(或者国内山寨浏览器)的忠实用户，请绕道吧。</p>

<!-- more -->


<p><a href="http://boia.github.com/art/light.html">预览效果</a></p>

<br><br>


<h2>代码解析</h2>

<br><br>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nb">window</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">$</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">id</span><span class="p">){</span>
</span><span class='line'>      <span class="k">return</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">id</span><span class="p">);</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">light</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;light&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">dark</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;dark&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">isDark</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//var centerX = 0;</span>
</span><span class='line'>  <span class="c1">//var centerY = 0;</span>
</span><span class='line'>  <span class="c1">//var isMove = 0;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">light</span><span class="p">.</span><span class="nx">onclick</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="nx">isDark</span><span class="p">){</span>
</span><span class='line'>          <span class="nx">light</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">backgroundPosition</span> <span class="o">=</span> <span class="s2">&quot;0 0&quot;</span><span class="p">;</span>
</span><span class='line'>          <span class="nx">dark</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">backgroundColor</span> <span class="o">=</span> <span class="s2">&quot;rgba(0,0,0,1)&quot;</span><span class="p">;</span>
</span><span class='line'>          <span class="nx">isDark</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">else</span><span class="p">{</span>
</span><span class='line'>          <span class="nx">light</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">backgroundPosition</span> <span class="o">=</span> <span class="s2">&quot;0 -50&quot;</span><span class="p">;</span>
</span><span class='line'>          <span class="nx">dark</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">backgroundColor</span> <span class="o">=</span> <span class="s2">&quot;rgba(0,0,0,0.5)&quot;</span><span class="p">;</span>               
</span><span class='line'>          <span class="nx">isDark</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">dark</span><span class="p">.</span><span class="nx">onmousemove</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="nx">e</span><span class="p">.</span><span class="nx">clientX</span><span class="p">;</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">y</span> <span class="o">=</span> <span class="nx">e</span><span class="p">.</span><span class="nx">clientY</span><span class="p">;</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="nx">isDark</span><span class="p">){</span>
</span><span class='line'>          <span class="nx">dark</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">background</span> <span class="o">=</span> <span class="s2">&quot;rgb(0,0,0) -webkit-gradient(radial,&quot;</span><span class="o">+</span><span class="nx">x</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">y</span><span class="o">+</span><span class="s2">&quot;, 50,&quot;</span><span class="o">+</span><span class="nx">x</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">y</span><span class="o">+</span><span class="s2">&quot;,80, from(rgba(255,255,255,1)), to(rgba(255,255,255,0.7)), color-stop(100%, rgba(255,255,255,0.4)))&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>          <span class="c1">//手电筒效果</span>
</span><span class='line'>          <span class="cm">/*dark.style.background = &quot;rgb(0,0,0) -webkit-gradient(radial,center center, 30,&quot;+x+&quot; &quot;+y+&quot;,80, from(rgba(0,0,0,1)), to(rgba(255,255,255,0.6)), color-stop(100%, rgba(255,255,255,0.9)))&quot;;*/</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">else</span><span class="p">{</span>
</span><span class='line'>          <span class="nx">dark</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">background</span> <span class="o">=</span> <span class="s2">&quot;rgba(0,0,0,1)&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>            
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<br><br>


<p>感觉移动鼠标的时候，明显有些卡，将背景色处理放在setInterval中处理，效果也一样，应该是gradient函数中的终始坐标都用变量，而且是个时刻在改变的变量，那么就出现了卡的现象。动画帧频我觉得还是canvas处理比较好玩，对于gradient()这个函数，我也是今天第一次用，如果有什么不懂，可以去看下CSS手册。对于效果，程序主要围绕着给Object.style.background赋值来实现特效。</p>

<p>我还写了一个手电筒效果，这个效果明显流畅很多，因为起始的坐标用了一个定值，鼠标带动手电
筒照亮黑暗的地方。对CSS3我不是很熟，但确实很厉害。</p>

<p>最近准备写个关于canvas的教程(是根据ActionScript来写的)。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[html5模拟数码管实验]]></title>
    <link href="http://boia.github.com/blog/2013/03/17/num-light/"/>
    <updated>2013-03-17T21:36:00+08:00</updated>
    <id>http://boia.github.com/blog/2013/03/17/num-light</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<p>最近在做物联网的东西，也好久没碰电子了，看到显示器，就想用<strong>HTML5</strong>模拟一个数码管玩玩，这个程序在前段时间已经完成了，今天本想着改进一下，不知道是不是因为实习前的&#8221;大姨爸&#8221;来了，特别的无力。</p>

<!-- more -->


<br><br>


<h2>瞻仰代码</h2>

<p>代码本不难，估计是隔了一段时间了，今天来看已经有点困难，如果要解释的话就更加地为难了。没有动画效果，没有复杂代码，只是在4*7的格子上画圆凑成一个数字，将每个数字的坐标存在数组里，然后用forEach(函数编程真妙&#8230;)将每个坐标都取出来画圆。</p>

<br><br>


<h2>看看jsFiddle</h2>

<iframe style="width: 100%; height: 450px" src="http://jsfiddle.net/59mNq/embedded/result,js,html,css/presentation/"></iframe>




<br><br>


<h2>最近浅淡</h2>

<p>毕设先要放一段时间了，专心实习，脑电波继续无力着&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[开始html5]]></title>
    <link href="http://boia.github.com/blog/2013/03/16/begin-html5/"/>
    <updated>2013-03-16T11:44:00+08:00</updated>
    <id>http://boia.github.com/blog/2013/03/16/begin-html5</id>
    <content type="html"><![CDATA[<h2>简介</h2>

<p>作为一个自动化学院(传言专业被并到了计算机专业)的学生，对开发语言(面向对象)几乎没有接触过，C也是朦朦胧胧凭着最后两夜地奋斗通过了考试，可能天赋在此，考的还可以。大二搞起单片机，那时候还是用51，不知怎地就爱上了程序，不过至今还坚持着<strong>硬件和软件是一家</strong>的真理。</p>

<!-- more -->




<br><br>


<h2>编程</h2>

<p>一年前，偶然的机会让我知道了<a href="http://weibo.com/xiuyetang/">秀野堂</a>堂主，当时他的个人网站还是用纯HTML5写的，现在可能没有时间管理了。下载了他的6个视频，当时对web几乎不懂，就开始看起了他的教程视频，然后花了将近一周的时间写了一个纯静态的网站，而且只是<strong>html5</strong>，连常人熟知的div都没有(造成了现在搞个应用也不用div)，写出来以后还洋洋得意了好几天，现在觉得当时就是一纯2b，没见过世面的村儿。不知天高地厚地在3v.com申请了免费空间就上传了，ftp用起来还是蛮熟练的。css、js还得边看着手册边查用法的时候，就去下载了<strong>php_manual_zh.chm</strong>，或许真是脑子开窍，也可能是曾苦逼熬夜一个月细读C++手册感动了上天，将我的IQ提高了不少等等各种不为人知的缘由，学起新语言来轻轻松松，class、extend、implement、interface&#8230;这些我未曾碰过的关键词至今都刻在我脑子里。所以明白了一个道理:<strong>领悟编程，只是在等一个时机</strong>。</p>

<br><br>


<h2>论道HTML5</h2>

<p><a href="http://weibo.com/xiuyetang/">秀野堂</a>在一年前说要闭关做个关于webgl的游戏，然后就消失了，在这里我必须要感谢秀野堂，是他确定了我未来至少5年的方向，然而对于他出的书，在很早前我就在豆瓣中加入了想读的行列，一直没买(觉得不值&#8230;)，两天前拿到这本书，到今天也就看了一章，最近一直在搞脑电波(失败中&#8230;)。</p>

<p><img src="http://boia.github.com/images/post/lundaohtml5.png" title="论道HTML5" ><br><br></p>

<h2>总结</h2>

<p>坚持地搞下去&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[纪念下新车]]></title>
    <link href="http://boia.github.com/blog/2013/03/16/new-bike/"/>
    <updated>2013-03-16T11:06:00+08:00</updated>
    <id>http://boia.github.com/blog/2013/03/16/new-bike</id>
    <content type="html"><![CDATA[<h2>人生的第一次工作</h2>

<p>不管怎么样，人生的第一次工作还是值得期待的，新的学习开始了！！！</p>

<!-- more -->


<h2>有图有真相</h2>

<p><img src="http://boia.github.com/images/post/che.png" title="新车" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一代宗师吐槽否]]></title>
    <link href="http://boia.github.com/blog/2013/03/13/yidaizongshi/"/>
    <updated>2013-03-13T22:05:00+08:00</updated>
    <id>http://boia.github.com/blog/2013/03/13/yidaizongshi</id>
    <content type="html"><![CDATA[<p><img src="http://boia.github.com/images/post/yidaizongshi.png" title="一代宗师" ></p>

<!-- more -->


<p>今天花了俩小时看了<a href="http://baike.baidu.com/view/675320.htm">一代宗师</a>，本来去年1月份对一代宗师抱着极大的乐趣，群星聚首加上<strong>王家卫</strong>，这本是一部好片，况且顶着<strong>八年筹备，三年拍摄</strong>的帽子，期待本是应该。</p>

<p>吐槽只为个人意见</p>

<h3>人生如戏 落子无悔</h3>

<p>第一败笔叶问的妻子用的是韩国人，第一眼没有认出来，这应该是那个步步高广告那姐们儿吧？韩国妞儿也会拍电影？</p>

<h3>每次的相聚 都是久后重逢</h3>

<p>宫二这名儿是不是太**啥了</p>

<h3>人活在世上 有的活成了面子 有的活成了里子</h3>

<p>赵本山和小沈阳这两说相声的，哦，说小品的来凑什么热闹</p>

<h3>功夫 两个字 一横一竖</h3>

<p>这句话很经典，没有吐槽，人生亦如此。可是对打戏会不会太多了？</p>

<h2>综述</h2>

<p>没有吐槽，没有吐槽，对中国电影只能用<strong>一言难尽</strong>来形容有木有。</p>

<p>Included file &#8216;link&#8217; not found in _includes directory</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Arduino链接yeelink实现物联网]]></title>
    <link href="http://boia.github.com/blog/2013/03/08/arduino-yeelink/"/>
    <updated>2013-03-08T19:55:00+08:00</updated>
    <id>http://boia.github.com/blog/2013/03/08/arduino-yeelink</id>
    <content type="html"><![CDATA[<h2>Arduino</h2>

<p>Arduino Mega2560买来也将近一个多月了，一直放着没用，昨天想着试试Ethernet Shield，将Arduino作为一个服务器，在浏览器上可以控制Arduino，本来想着也不是太难，但自己真正搞起来了就不是那么一回事了。</p>

<br>


<p><img src="http://boia.github.com/images/post/ethernet.png" width="320" height="240" title="Arduino Yeelink" ></p>

<!-- more -->


<br>


<h3>搭建局域网</h3>

<p>先不连到网络，来搭建一个局域网，将本机和Arduino用网线连起来(用路由器的自动获取IP应该更简单一点)，</p>

<h3>下载程序配置</h3>

<p>昨天在Windows XP下找驱动，发现在网上到处找不到，今天上午就在Arduino软件下(我用的是Arduino1.0.3)看到了Drivers文件夹，这让我情何以堪啊，不过需要注意的是在设备管理器下更新驱动程序选择文件夹最好选drivers而不是FTDI USB Drivers。</p>

<p>接着烧程序，因为官方写了Ethernet程序库，所以我就随便选了个，打开<code>File/Examples/Ethernet/WebServe</code>文件，然后将程序中的</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>IPAddress ip(192,168,1, 177);</span></code></pre></td></tr></table></div></figure>


<p>改成你本机IP的同一段</p>

<p>打开浏览器输入<code>http://192.168.1.177</code>，注意<strong>输入的是你设置的IP</strong>，简单的WebServer就搭建起来了</p>

<h3>Yeelink</h3>

<p>早就听说<strong>物联网</strong>这个词了，却一直没有真正地去探索
接入Yeelink平台, 并通过应用进行远程管理和控制, 使您的设备快速迈进物联网时代。</p>

<p><a href="" title="http://www.yeelink.net/develop/quickstart">快速开始</a>这里有关于yeelink用户注册，新建设备，加传感器初级教程，这里就不细说了。</p>

<figure class='code'><figcaption><span>yeelink</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/*
</span><span class='line'> Yeelink sensor client power switch example
</span><span class='line'> */
</span><span class='line'>
</span><span class='line'>#include &lt;SPI.h>
</span><span class='line'>#include &lt;Ethernet.h>
</span><span class='line'>#include &lt;Wire.h>
</span><span class='line'>#include &lt;math.h>
</span><span class='line'>
</span><span class='line'>byte buff[2];
</span><span class='line'>
</span><span class='line'>// for yeelink api
</span><span class='line'>#define APIKEY         "*****" // replace your yeelink api key here
</span><span class='line'>#define DEVICEID        // replace your device ID
</span><span class='line'>#define SENSORID        // replace your sensor ID
</span><span class='line'>
</span><span class='line'>// assign a MAC address for the ethernet controller.
</span><span class='line'>byte mac[] = { 0x00, 0x1D, 0x72, 0x82, 0x35, 0x9D};
</span><span class='line'>// initialize the library instance:
</span><span class='line'>EthernetClient client;
</span><span class='line'>char server[] = "api.yeelink.net";   // name address for yeelink API
</span><span class='line'>
</span><span class='line'>unsigned long lastConnectionTime = 0;          // last time you connected to the server, in milliseconds
</span><span class='line'>boolean lastConnected = false;                 // state of the connection last time through the main loop
</span><span class='line'>const unsigned long postingInterval = 3*1000; // delay between 2 datapoints, 30s
</span><span class='line'>String returnValue = ""; 
</span><span class='line'>boolean ResponseBegin = false;
</span><span class='line'>
</span><span class='line'>void setup() {
</span><span class='line'>  pinMode(7, OUTPUT);
</span><span class='line'>
</span><span class='line'>  Wire.begin();
</span><span class='line'>  // start serial port:
</span><span class='line'>  Serial.begin(57600);
</span><span class='line'>  // start the Ethernet connection with DHCP:
</span><span class='line'>  if (Ethernet.begin(mac) == 0) {
</span><span class='line'>    Serial.println("Failed to configure Ethernet using DHCP");
</span><span class='line'>    for(;;)
</span><span class='line'>      ;
</span><span class='line'>  }
</span><span class='line'>  else {
</span><span class='line'>    Serial.println("Ethernet configuration OK");
</span><span class='line'>  }
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>void loop() {
</span><span class='line'>  // if there's incoming data from the net connection.
</span><span class='line'>  // send it out the serial port.  This is for debugging
</span><span class='line'>  // purposes only:
</span><span class='line'>
</span><span class='line'>  if (client.available()) {
</span><span class='line'>    char c = client.read();
</span><span class='line'>   // Serial.print(c);
</span><span class='line'>      if (c == '{')
</span><span class='line'>        ResponseBegin = true;
</span><span class='line'>      else if (c == '}')
</span><span class='line'>        ResponseBegin = false;
</span><span class='line'>
</span><span class='line'>      if (ResponseBegin)
</span><span class='line'>        returnValue += c;   
</span><span class='line'>  }
</span><span class='line'>  if (returnValue.length() !=0 && (ResponseBegin == false))
</span><span class='line'>  {
</span><span class='line'>    Serial.println(returnValue);
</span><span class='line'>    
</span><span class='line'>    if (returnValue.charAt(returnValue.length() - 1) == '1') {
</span><span class='line'>      Serial.println("turn on the LED"); 
</span><span class='line'>      digitalWrite(7, HIGH);
</span><span class='line'>
</span><span class='line'>    } 
</span><span class='line'>      else if(returnValue.charAt(returnValue.length() - 1) == '0') {
</span><span class='line'>      Serial.println("turn off the LED"); 
</span><span class='line'>      digitalWrite(7, LOW);
</span><span class='line'>    }
</span><span class='line'>     returnValue = "";
</span><span class='line'>  }
</span><span class='line'>  // if there's no net connection, but there was one last time
</span><span class='line'>  // through the loop, then stop the client:
</span><span class='line'>  if (!client.connected() && lastConnected) {
</span><span class='line'>    Serial.println();
</span><span class='line'>    Serial.println("disconnecting.");
</span><span class='line'>    client.stop();
</span><span class='line'>  }
</span><span class='line'>  
</span><span class='line'>  // if you're not connected, and ten seconds have passed since
</span><span class='line'>  // your last connection, then connect again and send data:
</span><span class='line'>  if(!client.connected() && (millis() - lastConnectionTime > postingInterval)) {
</span><span class='line'>    // read sensor data, replace with your code
</span><span class='line'>    //int sensorReading = readLightSensor();
</span><span class='line'>    Serial.print("yeelink:");
</span><span class='line'>    //get data from server  
</span><span class='line'>    getData();
</span><span class='line'>  }
</span><span class='line'>  // store the state of the connection for next time through
</span><span class='line'>  // the loop:
</span><span class='line'>  lastConnected = client.connected();
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>// this method makes a HTTP connection to the server and get data back
</span><span class='line'>void getData(void) {
</span><span class='line'>  // if there's a successful connection:
</span><span class='line'>  if (client.connect(server, 80)) {
</span><span class='line'>    Serial.println("connecting...");
</span><span class='line'>    // send the HTTP GET request:
</span><span class='line'>    
</span><span class='line'>    client.print("GET /v1.0/device/");
</span><span class='line'>    client.print(DEVICEID);
</span><span class='line'>    client.print("/sensor/");
</span><span class='line'>    client.print(SENSORID);
</span><span class='line'>    client.print("/datapoints");
</span><span class='line'>    client.println(" HTTP/1.1");
</span><span class='line'>    client.println("Host: api.yeelink.net");
</span><span class='line'>    client.print("Accept: *");
</span><span class='line'>    client.print("/");
</span><span class='line'>    client.println("*");
</span><span class='line'>    client.print("U-ApiKey: ");
</span><span class='line'>    client.println(APIKEY);
</span><span class='line'>    client.println("Content-Length: 0");
</span><span class='line'>    client.println("Connection: close");
</span><span class='line'>    client.println();
</span><span class='line'>    Serial.println("print get done.");
</span><span class='line'>    
</span><span class='line'>  } 
</span><span class='line'>  else {
</span><span class='line'>    // if you couldn't make a connection:
</span><span class='line'>    Serial.println("connection failed");
</span><span class='line'>    Serial.println();
</span><span class='line'>    Serial.println("disconnecting.");
</span><span class='line'>    client.stop();
</span><span class='line'>  }
</span><span class='line'>   // note the time that the connection was made or attempted:
</span><span class='line'>  lastConnectionTime = millis();
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>你只要将程序中的三个常量APIKEY DEVICEID SENSORID改成你自己在yeelink上得到的值。</p>

<br>


<h3>附上两张照片</h3>

<br>


<p><img class="left" src="http://boia.github.com/images/post/arduino2.png" title="Arduino Yeelink" alt="Arduino Yeelink"></p>

<br><br>


<p><img class="left" src="http://boia.github.com/images/post/arduino3.png" title="Arduino Yeelink" alt="Arduino Yeelink"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[数独(无canvas)]]></title>
    <link href="http://boia.github.com/blog/2013/03/07/sudu/"/>
    <updated>2013-03-07T15:38:00+08:00</updated>
    <id>http://boia.github.com/blog/2013/03/07/sudu</id>
    <content type="html"><![CDATA[<h2>简介</h2>

<p>闲来无事玩数独，就想到了用javascript来写一个数独游戏，觉得用DOM写比canvas要简单的多，只是对DOM的API特别熟悉，不过API并不是太多，看了一下就开始写了，在设计和美工方面并没有用太多时间，所以美工也很糙，主要suduku的算法确实卡了好长一段时间，不过也写出了平庸的算法，没辙啊，对算法不感冒是很悲哀的，一直没明白，为什么选关以后数据就会变乱了。</p>

<!-- more -->




<br><br><br>


<p><img src="http://boia.github.com/images/post/sudu.png" title="sudu" ></p>

<br>


<p><a href="http://boia.github.com/game/sudu/sudu.html">开始游戏</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[蘑菇和小熊的游戏]]></title>
    <link href="http://boia.github.com/blog/2013/03/07/mushroom_bear/"/>
    <updated>2013-03-07T14:56:00+08:00</updated>
    <id>http://boia.github.com/blog/2013/03/07/mushroom_bear</id>
    <content type="html"><![CDATA[<p>把一个游戏移植过来，游戏是从一个<a href="http://jacebook.co.uk/blog/2010/09/11/html5-writing-a-game/">老外</a>那里看见的，他写了关于这个游戏的教程,我发现他的代码并不是特别好，也比较地乱，然后我就想着自己做一个，素材就直接从他那里盗过来了，终归我对设计并不是特别感兴趣,还有很多bug需要修改，不要吐槽。</p>

<!-- more -->


<br><br><br>


<p><img src="http://boia.github.com/images/post/mush_bear.png" title="mushroom_bear" ></p>

<br>


<p><a href="http://boia.github.com/game/mush-bear/game.html">开始游戏</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[invalid byte sequence in GBK]]></title>
    <link href="http://boia.github.com/blog/2013/03/06/octopress/"/>
    <updated>2013-03-06T19:31:00+08:00</updated>
    <id>http://boia.github.com/blog/2013/03/06/octopress</id>
    <content type="html"><![CDATA[<h2>痛不欲生的windows</h2>

<p>今天360奇迹般地发挥他的作用，将我jajl-ruby里的一个文件给删了，这尼玛痛苦地搞了一下午啊，还将ruby和devkit都重新安装了一遍，360是白痴，我也变成白痴了？</p>

<!-- more -->


<h2>invalid byte sequence in GBK</h2>

<p>接着就出现了编码问题，对ruby几乎不懂，看懂代码还是可以的，然后就一个个文件地查，到底哪个文件是转换文件格式编码的，最后锁定到了<code>convertible.rb</code>(还有iconf)</p>

<p>真心还是不懂，也忘了输了什么关键词，就找到<a href="https://github.com/imathis/octopress/issues/232">解决方法</a></p>

<br><br><br>


<p><img src="http://boia.github.com/images/post/1.png" title="imath" ></p>

<br><br><br>


<p>只要改成以下代码就可以了，在<code>convertible.rb</code>的28行</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>self.content = File.read(File.join(base, name), :encoding => "utf-8")</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[面试第一站—————联想(带题目和我做的)]]></title>
    <link href="http://boia.github.com/blog/2013/03/06/lenovo/"/>
    <updated>2013-03-06T10:54:00+08:00</updated>
    <id>http://boia.github.com/blog/2013/03/06/lenovo</id>
    <content type="html"><![CDATA[<p>昨天下午孤身来到联想面试，觉得最不顺利的事情就是没找到333(外)公交车。先挂个联想公司的招牌</p>

<p><img src="http://boia.github.com/images/post/lenovo.png" title="Lenovo" ></p>

<!-- more -->


<p>见到HR，礼貌地问候一句，然后被他领到一个相对比较小的会议室里(大概就是面议室)，然后他叫我等下，随后找了面试官过来，面试官估计也是搞技术的，我们就很随意地聊起来了，问题也不多，而且主要还是我说的比较多，叽叽呱呱地一通。随便挑几个问题：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>他: 简历写得够简单的，怎么不加些链接可以访问下你以前做的东西呢？
</span><span class='line'>我: 因为简历是上周赶出来的，而blog是最近几天弄好的，很多做的东西也没有从其他网站整理出    来。
</span><span class='line'>...
</span><span class='line'>他: 我对canvas的了解也不是太深，你能简单介绍下吗？
</span><span class='line'>我: ...
</span><span class='line'>...
</span><span class='line'>他： 你能谈下物联网吗？(因为这是我毕设研究的)
</span><span class='line'>我:  ...
</span><span class='line'>他： 简单说下你大学的情况
</span><span class='line'>我:  ...</span></code></pre></td></tr></table></div></figure>


<h2>题目</h2>

<p>然后他给我出了一道关于html5的题目，画一个饼状图然后将鼠标移到上面可以得到信息。
我6点开始写，写到10点左右弄好后，就给他发邮件了，其他就看造化了。</p>

<iframe style="width: 100%; height: 500px" src="http://jsfiddle.net/7hkyx/embedded/result,js,html,css/light/"></iframe>


<p>程序比较简单，主要是canvas事件处理问题，以后可以将这道题目发个教程。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress侧边栏放上Flickr相片]]></title>
    <link href="http://boia.github.com/blog/2013/03/04/flickr-sidebar/"/>
    <updated>2013-03-04T22:35:00+08:00</updated>
    <id>http://boia.github.com/blog/2013/03/04/flickr-sidebar</id>
    <content type="html"><![CDATA[<p>今天来点生活式的技术，在侧边栏，当然你也可以在页面上放上Flickr相片</p>

<h2>Demo</h2>

<p><a href="http://boia.github.com/blog/archives/">octopress放入<strong>Flickr</strong>相册</a></p>

<!-- more -->


<h2>注册Flickr</h2>

<p><a href="http://www.flickr.com/">Flickr</a>来自yahoo，所以注册的是雅虎账号</p>

<h2>下载Flickr-Badge</h2>

<p>Flickr-Badge是一个octopress插件，它托管在github上</p>

<p>输以下命令</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&#123;% git clone https://github.com/chronon/Octopress-Flickr-Badge.git %}</span></code></pre></td></tr></table></div></figure>


<h2>文件</h2>

<p> 把<code>flickr.html</code>放到<code>source/_includes/custom/asides/</code>中
<code>_styles.scss</code>放到 <code>sass/custom</code>中，如果你的<code>_styles.scss</code>以前有过修改，就把里面代码copy出来然后放到以前文件的尾部</p>

<h2>配置</h2>

<p>将<code>custom/asides/flickr.html</code> 放到<code>_config.yml</code>中default_asides的[]中.</p>

<p>在<code>_config.yml</code>的尾部加以下内容</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Flickr Badge
</span><span class='line'>flickr_user:            # user id (not username)
</span><span class='line'>flickr_count:           # 照片数量
</span><span class='line'>flickr_display:         # random or latest(随机或者最新)
</span><span class='line'>flickr_size:            # t (thumbnail), s (small square), m (medium)
</span><span class='line'>flickr_source:          # user, user_tag, all, all_tag
</span><span class='line'>flickr_tag:             # tagname - set if flickr_source is set to user_tag or all_tag</span></code></pre></td></tr></table></div></figure>


<p>flickr_user不是用户名，是用户id，你可以从<a href="http://idgettr.com/">idgettr.com</a>获得</p>
]]></content>
  </entry>
  
</feed>
