<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: css3 | boia's博客]]></title>
  <link href="http://boia.github.com/blog/categories/css3/atom.xml" rel="self"/>
  <link href="http://boia.github.com/"/>
  <updated>2013-08-12T15:23:31+08:00</updated>
  <id>http://boia.github.com/</id>
  <author>
    <name><![CDATA[boia]]></name>
    <email><![CDATA[zhengwang2314@qq.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[css-reset-style]]></title>
    <link href="http://boia.github.com/blog/2013/07/18/css-reset-style/"/>
    <updated>2013-07-18T16:03:00+08:00</updated>
    <id>http://boia.github.com/blog/2013/07/18/css-reset-style</id>
    <content type="html"><![CDATA[<h2>默认样式</h2>

<br>


<p>在浏览器中，它有自己的默认样式，而且每个浏览器的默认样式还不相同，而且，默认样式对于有些实际的项目不能兼容，所以很多人都在写重置样式。</p>

<!-- more -->


<br>


<h2>重置样式</h2>

<br>


<p>刚开始时候，大家都比较习惯性地这样写
```css
*{</p>

<pre><code>margin:  0;
padding: 0;
</code></pre>

<p>}
```</p>

<br>


<p>这样写的确很方便，也很简单。但这样会应用到所有的元素上，包括了文本框和下拉框等等，已经不能满足大多数人。所以写一个更复杂的重置样式势在必行。</p>

<p>一个比较流行的重置样式如下
```css
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {</p>

<pre><code>margin: 0;
padding: 0;
border: 0;
font-size: 100%;
font: inherit;
vertical-align: baseline;
</code></pre>

<p>}
/<em> HTML5 display-role reset for older browsers </em>/
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {</p>

<pre><code>display: block;
</code></pre>

<p>}
body {</p>

<pre><code>line-height: 1;
</code></pre>

<p>}
ol, ul {</p>

<pre><code>list-style: none;
</code></pre>

<p>}
blockquote, q {</p>

<pre><code>quotes: none;
</code></pre>

<p>}
blockquote:before, blockquote:after,
q:before, q:after {</p>

<pre><code>content: '';
content: none;
</code></pre>

<p>}
table {</p>

<pre><code>border-collapse: collapse;
border-spacing: 0;
</code></pre>

<p>}
```</p>

<br>


<p>
[Ruby]:			http://www.ruby-lang.org						"Ruby"
[git]:			http://git-scm.com/								"Git"
[Jekyll]:		https://github.com/mojombo/jekyll/wiki			"Jekyll"
[Octopress]:	http://octopress.org							"Octopress"
[Markdown]:		http://daringfireball.net/projects/markdown/	"Markdown"
[Google]:		http://www.google.com							"Google"
[Yahoo]:		http://www.yahoo.com							"Yahoo"
[Twitter]:		http://twitter.com/								"Twitter"

[Firebug]:		http://getfirebug.com/							"Firebug"

[Wikipedia]:	http://www.wikipedia.org						"Wikipedia"
[维基百科]:		http://zh.wikipedia.org							"维基中文"

[煎蛋]:			http://jandan.net								"煎蛋"
[小众软件]:		http://appinn.com								"小众软件"
[小众]:			http://appinn.com								"小众软件"
[新浪微博]:		http://weibo.com								"新浪微博"
[微博]:			http://weibo.com								"新浪微博"
[墙]:			http://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E	"叹息之墙"
[知乎]:			http://www.zhihu.com							"知乎"

[CSSer]:		http://www.csser.com/							"CSSer"

[Node.JS]:		http://nodejs.org								"Node.JS"
[NPM]:			http://search.npmjs.org/						"NPM Registry"
[mocha]:		http://visionmedia.github.com/mocha/			"mocha"
[CoffeeScript]:	http://coffeescript.org/						"CoffeeScript"
[Coffee]:		http://coffeescript.org/						"CoffeeScript"
[JSCoverage]:	http://siliconforks.com/jscoverage/				"JSCoverage"
[node-jscoverage]: https://github.com/visionmedia/node-jscoverage "node-jscoverage"
[Jasmine]:		http://pivotal.github.com/jasmine/				"Jasmine"

[GitHub]:		https://github.com								"GitHub"

</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[css3中:before和:after经典例子]]></title>
    <link href="http://boia.github.com/blog/2013/05/06/css3-before-after/"/>
    <updated>2013-05-06T17:45:00+08:00</updated>
    <id>http://boia.github.com/blog/2013/05/06/css3-before-after</id>
    <content type="html"><![CDATA[<h2>开始CSS3</h2>

<br>


<p>作为一个非专业前端的前端实习生，对前端总是抱着一种既可恨又崇拜的心情。如果没有那么多兼容问题，或许会很美好。</p>

<p>前几天，借一朋友吉言开始使用before和after，试了一下，发现要火。</p>

<p>先看例子</p>

<p><a href="/art/cry.html">演示</a></p>

<!-- more -->




<br><br>


<h2>分析源码</h2>

<br>


<p>代码其实很简答，总体围绕着<code>:before</code>和<code>:after</code>架构，因为代码比较多，而且咱们只要去懂得逻辑，没必要纠结于简单的css代码</p>

<br><br>


<h3>① unicode</h3>

<p><code>font-family:\5B8B\4F53...</code></p>

<p>有些浏览器可能会不支持中文，所以我们常常用中文的unicode编码，这里的<code>\5B8B\4F53</code>实际上是"宋体"，百度应用里有一个中文转换成unicode的工具，那么你就不用时刻记住它了</p>

<p><a href="http://www.baidu.com/s?ie=utf-8&amp;bs=unicode&amp;f=8&amp;rsv_bp=1&amp;wd=%E4%B8%AD%E6%96%87unicode&amp;rsv_sug3=3&amp;rsv_sug1=3&amp;rsv_sug4=106&amp;rsv_sug=1&amp;inputT=1170">unicode中文</a></p>

<br><br>


<h3>② CSS3画圆和三角</h3>

<br><br>


<p>在很久很久以前，CSS3还没出现的时候，如果你想画圆、三角，甚至一些不规则形状的图形，你必须使用图片，但并不是每个人都会PS，所以CSS3的出现在一定程度上也解决了前端工程师不懂PS的窘境。</p>

<p>在这里我想要提两个CSS3的小技术，在上面那个例程我也多次使用了这两个技术。</p>

<br><br>


<h4>画圆</h4>

<p>规定一个块(如div)的宽和高相同，假设100px，在将<code>border-radius</code>也赋值为100px，一个简单的圆就绘制出来了。</p>

<br><br>


<h4>三角</h4>

<p>将一个块的宽和高都定义为0，然后给<code>border</code>赋值，20px，现在你看到的只是一个边长为20px的正方形，这时候你加上<code>border-color: red green orange blue</code>，神奇的事情发生了，同样是正方形，却被割成了4个不同颜色的三角形，也许你懂了，我们只要将代码改成<code>border-color: red transparent transparent transparent</code>，这时候我们就能看到一个向下的三角形。</p>

<br><br>


<h4>:before和:after</h4>

<p>这是css3中的伪元素，它的出现注定要改变互联网，因为只要你有想象力，可以做出很多不可能完成的任务，但是这里我不想做介绍，因为靠字面意思就能懂了，而且在前端你一定懂得比我多，班门弄斧总是会砸到自己的脚。</p>

<br><br>


<p>谢谢你读完了我整篇博客，如果你有类似的创意，可以发给我，和我一起交流，只有分享才会有进步。</p>

<p>
[Ruby]:			http://www.ruby-lang.org						"Ruby"
[git]:			http://git-scm.com/								"Git"
[Jekyll]:		https://github.com/mojombo/jekyll/wiki			"Jekyll"
[Octopress]:	http://octopress.org							"Octopress"
[Markdown]:		http://daringfireball.net/projects/markdown/	"Markdown"
[Google]:		http://www.google.com							"Google"
[Yahoo]:		http://www.yahoo.com							"Yahoo"
[Twitter]:		http://twitter.com/								"Twitter"

[Firebug]:		http://getfirebug.com/							"Firebug"

[Wikipedia]:	http://www.wikipedia.org						"Wikipedia"
[维基百科]:		http://zh.wikipedia.org							"维基中文"

[煎蛋]:			http://jandan.net								"煎蛋"
[小众软件]:		http://appinn.com								"小众软件"
[小众]:			http://appinn.com								"小众软件"
[新浪微博]:		http://weibo.com								"新浪微博"
[微博]:			http://weibo.com								"新浪微博"
[墙]:			http://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E	"叹息之墙"
[知乎]:			http://www.zhihu.com							"知乎"

[CSSer]:		http://www.csser.com/							"CSSer"

[Node.JS]:		http://nodejs.org								"Node.JS"
[NPM]:			http://search.npmjs.org/						"NPM Registry"
[mocha]:		http://visionmedia.github.com/mocha/			"mocha"
[CoffeeScript]:	http://coffeescript.org/						"CoffeeScript"
[Coffee]:		http://coffeescript.org/						"CoffeeScript"
[JSCoverage]:	http://siliconforks.com/jscoverage/				"JSCoverage"
[node-jscoverage]: https://github.com/visionmedia/node-jscoverage "node-jscoverage"
[Jasmine]:		http://pivotal.github.com/jasmine/				"Jasmine"

[GitHub]:		https://github.com								"GitHub"

</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[纪念地球节电一小时]]></title>
    <link href="http://boia.github.com/blog/2013/03/24/ditiejiedian/"/>
    <updated>2013-03-24T16:18:00+08:00</updated>
    <id>http://boia.github.com/blog/2013/03/24/ditiejiedian</id>
    <content type="html"><![CDATA[<h2>2013-3-23 节电</h2>

<p>世界自然基金会在2007年向全球发出的一项倡议：就是在每年三月的最后一个星期六20：30~21：30期间熄灯1小时，为了纪念这个活动，我用CSS3+JS代码模拟了一个节电活动，如果你是IE(或者国内山寨浏览器)的忠实用户，请绕道吧。</p>

<!-- more -->


<p><a href="/art/light.html">预览效果</a></p>

<br><br>


<h2>代码解析</h2>

<br><br>


<p>```javascript</p>

<pre><code>window.onload = function(){
    var $ = function(id){
        return document.getElementById(id);
    };

    var light = $("light");
    var dark = $("dark");
    var isDark = false;

    //var centerX = 0;
    //var centerY = 0;
    //var isMove = 0;

    light.onclick = function(){
        if(isDark){
            light.style.backgroundPosition = "0 0";
            dark.style.backgroundColor = "rgba(0,0,0,1)";
            isDark = false;
        }
        else{
            light.style.backgroundPosition = "0 -50";
            dark.style.backgroundColor = "rgba(0,0,0,0.5)";             
            isDark = true;
        }

    };

    dark.onmousemove = function(e){
            var x = e.clientX;
            var y = e.clientY;
        if(isDark){
            dark.style.background = "rgb(0,0,0) -webkit-gradient(radial,"+x+" "+y+", 50,"+x+" "+y+",80, from(rgba(255,255,255,1)), to(rgba(255,255,255,0.7)), color-stop(100%, rgba(255,255,255,0.4)))";

            //手电筒效果
            /*dark.style.background = "rgb(0,0,0) -webkit-gradient(radial,center center, 30,"+x+" "+y+",80, from(rgba(0,0,0,1)), to(rgba(255,255,255,0.6)), color-stop(100%, rgba(255,255,255,0.9)))";*/
        }
        else{
            dark.style.background = "rgba(0,0,0,1)";
        }           
    }
}
</code></pre>

<p>```</p>

<br><br>


<p>感觉移动鼠标的时候，明显有些卡，将背景色处理放在setInterval中处理，效果也一样，应该是gradient函数中的终始坐标都用变量，而且是个时刻在改变的变量，那么就出现了卡的现象。动画帧频我觉得还是canvas处理比较好玩，对于gradient()这个函数，我也是今天第一次用，如果有什么不懂，可以去看下CSS手册。对于效果，程序主要围绕着给Object.style.background赋值来实现特效。</p>

<p>我还写了一个手电筒效果，这个效果明显流畅很多，因为起始的坐标用了一个定值，鼠标带动手电
筒照亮黑暗的地方。对CSS3我不是很熟，但确实很厉害。</p>

<p>最近准备写个关于canvas的教程(是根据ActionScript来写的)。

[Ruby]:			http://www.ruby-lang.org						"Ruby"
[git]:			http://git-scm.com/								"Git"
[Jekyll]:		https://github.com/mojombo/jekyll/wiki			"Jekyll"
[Octopress]:	http://octopress.org							"Octopress"
[Markdown]:		http://daringfireball.net/projects/markdown/	"Markdown"
[Google]:		http://www.google.com							"Google"
[Yahoo]:		http://www.yahoo.com							"Yahoo"
[Twitter]:		http://twitter.com/								"Twitter"

[Firebug]:		http://getfirebug.com/							"Firebug"

[Wikipedia]:	http://www.wikipedia.org						"Wikipedia"
[维基百科]:		http://zh.wikipedia.org							"维基中文"

[煎蛋]:			http://jandan.net								"煎蛋"
[小众软件]:		http://appinn.com								"小众软件"
[小众]:			http://appinn.com								"小众软件"
[新浪微博]:		http://weibo.com								"新浪微博"
[微博]:			http://weibo.com								"新浪微博"
[墙]:			http://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E	"叹息之墙"
[知乎]:			http://www.zhihu.com							"知乎"

[CSSer]:		http://www.csser.com/							"CSSer"

[Node.JS]:		http://nodejs.org								"Node.JS"
[NPM]:			http://search.npmjs.org/						"NPM Registry"
[mocha]:		http://visionmedia.github.com/mocha/			"mocha"
[CoffeeScript]:	http://coffeescript.org/						"CoffeeScript"
[Coffee]:		http://coffeescript.org/						"CoffeeScript"
[JSCoverage]:	http://siliconforks.com/jscoverage/				"JSCoverage"
[node-jscoverage]: https://github.com/visionmedia/node-jscoverage "node-jscoverage"
[Jasmine]:		http://pivotal.github.com/jasmine/				"Jasmine"

[GitHub]:		https://github.com								"GitHub"

</p>
]]></content>
  </entry>
  
</feed>
