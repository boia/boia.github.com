<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Arduino | boia's博客]]></title>
  <link href="http://boia.github.com/blog/categories/arduino/atom.xml" rel="self"/>
  <link href="http://boia.github.com/"/>
  <updated>2013-04-23T17:45:37+08:00</updated>
  <id>http://boia.github.com/</id>
  <author>
    <name><![CDATA[boia]]></name>
    <email><![CDATA[zhengwang2314@qq.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Arduino链接yeelink实现物联网]]></title>
    <link href="http://boia.github.com/blog/2013/03/08/arduino-yeelink/"/>
    <updated>2013-03-08T19:55:00+08:00</updated>
    <id>http://boia.github.com/blog/2013/03/08/arduino-yeelink</id>
    <content type="html"><![CDATA[<h2>Arduino</h2>

<p>Arduino Mega2560买来也将近一个多月了，一直放着没用，昨天想着试试Ethernet Shield，将Arduino作为一个服务器，在浏览器上可以控制Arduino，本来想着也不是太难，但自己真正搞起来了就不是那么一回事了。</p>

<br>


<p><img src="/images/post/ethernet.png" width="320" height="240" title="Arduino Yeelink" ></p>

<!-- more -->


<br>


<h3>搭建局域网</h3>

<p>先不连到网络，来搭建一个局域网，将本机和Arduino用网线连起来(用路由器的自动获取IP应该更简单一点)，</p>

<h3>下载程序配置</h3>

<p>昨天在Windows XP下找驱动，发现在网上到处找不到，今天上午就在Arduino软件下(我用的是Arduino1.0.3)看到了Drivers文件夹，这让我情何以堪啊，不过需要注意的是在设备管理器下更新驱动程序选择文件夹最好选drivers而不是FTDI USB Drivers。</p>

<p>接着烧程序，因为官方写了Ethernet程序库，所以我就随便选了个，打开<code>File/Examples/Ethernet/WebServe</code>文件，然后将程序中的
<code>
IPAddress ip(192,168,1, 177);
</code>
改成你本机IP的同一段</p>

<p>打开浏览器输入<code>http://192.168.1.177</code>，注意<strong>输入的是你设置的IP</strong>，简单的WebServer就搭建起来了</p>

<h3>Yeelink</h3>

<p>早就听说<strong>物联网</strong>这个词了，却一直没有真正地去探索
接入Yeelink平台, 并通过应用进行远程管理和控制, 使您的设备快速迈进物联网时代。</p>

<p><a href="" title="http://www.yeelink.net/develop/quickstart">快速开始</a>这里有关于yeelink用户注册，新建设备，加传感器初级教程，这里就不细说了。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>yeelink</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/&lt;em>
</span><span class='line'> Yeelink sensor client power switch example
</span><span class='line'> &lt;/em>/&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>include &lt;SPI.h>&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>include &lt;Ethernet.h>&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>include &lt;Wire.h>&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>include &lt;math.h>&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>byte buff[2];&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>// for yeelink api&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>define APIKEY         "*****" // replace your yeelink api key here&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>define DEVICEID        // replace your device ID&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>define SENSORID        // replace your sensor ID&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p>// assign a MAC address for the ethernet controller.
</span><span class='line'>byte mac[] = { 0x00, 0x1D, 0x72, 0x82, 0x35, 0x9D};
</span><span class='line'>// initialize the library instance:
</span><span class='line'>EthernetClient client;
</span><span class='line'>char server[] = "api.yeelink.net";   // name address for yeelink API&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>unsigned long lastConnectionTime = 0;          // last time you connected to the server, in milliseconds
</span><span class='line'>boolean lastConnected = false;                 // state of the connection last time through the main loop
</span><span class='line'>const unsigned long postingInterval = 3*1000; // delay between 2 datapoints, 30s
</span><span class='line'>String returnValue = "";
</span><span class='line'>boolean ResponseBegin = false;&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>void setup() {
</span><span class='line'>  pinMode(7, OUTPUT);&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>  Wire.begin();
</span><span class='line'>  // start serial port:
</span><span class='line'>  Serial.begin(57600);
</span><span class='line'>  // start the Ethernet connection with DHCP:
</span><span class='line'>  if (Ethernet.begin(mac) == 0) {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>Serial.println("Failed to configure Ethernet using DHCP");
</span><span class='line'>for(;;)
</span><span class='line'>  ;
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>  }
</span><span class='line'>  else {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>Serial.println("Ethernet configuration OK");
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>  }
</span><span class='line'>}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>void loop() {
</span><span class='line'>  // if there's incoming data from the net connection.
</span><span class='line'>  // send it out the serial port.  This is for debugging
</span><span class='line'>  // purposes only:&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>  if (client.available()) {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>char c = client.read();
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>   // Serial.print(c);&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>  if (c == '{')
</span><span class='line'>    ResponseBegin = true;
</span><span class='line'>  else if (c == '}')
</span><span class='line'>    ResponseBegin = false;
</span><span class='line'>
</span><span class='line'>  if (ResponseBegin)
</span><span class='line'>    returnValue += c;   
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>  }
</span><span class='line'>  if (returnValue.length() !=0 &amp;&amp; (ResponseBegin == false))
</span><span class='line'>  {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>Serial.println(returnValue);
</span><span class='line'>
</span><span class='line'>if (returnValue.charAt(returnValue.length() - 1) == '1') {
</span><span class='line'>  Serial.println("turn on the LED"); 
</span><span class='line'>  digitalWrite(7, HIGH);
</span><span class='line'>
</span><span class='line'>} 
</span><span class='line'>  else if(returnValue.charAt(returnValue.length() - 1) == '0') {
</span><span class='line'>  Serial.println("turn off the LED"); 
</span><span class='line'>  digitalWrite(7, LOW);
</span><span class='line'>}
</span><span class='line'> returnValue = "";
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>  }
</span><span class='line'>  // if there's no net connection, but there was one last time
</span><span class='line'>  // through the loop, then stop the client:
</span><span class='line'>  if (!client.connected() &amp;&amp; lastConnected) {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>Serial.println();
</span><span class='line'>Serial.println("disconnecting.");
</span><span class='line'>client.stop();
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>  }&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>  // if you're not connected, and ten seconds have passed since
</span><span class='line'>  // your last connection, then connect again and send data:
</span><span class='line'>  if(!client.connected() &amp;&amp; (millis() - lastConnectionTime > postingInterval)) {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>// read sensor data, replace with your code
</span><span class='line'>//int sensorReading = readLightSensor();
</span><span class='line'>Serial.print("yeelink:");
</span><span class='line'>//get data from server  
</span><span class='line'>getData();
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>  }
</span><span class='line'>  // store the state of the connection for next time through
</span><span class='line'>  // the loop:
</span><span class='line'>  lastConnected = client.connected();
</span><span class='line'>}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>// this method makes a HTTP connection to the server and get data back
</span><span class='line'>void getData(void) {
</span><span class='line'>  // if there's a successful connection:
</span><span class='line'>  if (client.connect(server, 80)) {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>Serial.println("connecting...");
</span><span class='line'>// send the HTTP GET request:
</span><span class='line'>
</span><span class='line'>client.print("GET /v1.0/device/");
</span><span class='line'>client.print(DEVICEID);
</span><span class='line'>client.print("/sensor/");
</span><span class='line'>client.print(SENSORID);
</span><span class='line'>client.print("/datapoints");
</span><span class='line'>client.println(" HTTP/1.1");
</span><span class='line'>client.println("Host: api.yeelink.net");
</span><span class='line'>client.print("Accept: *");
</span><span class='line'>client.print("/");
</span><span class='line'>client.println("*");
</span><span class='line'>client.print("U-ApiKey: ");
</span><span class='line'>client.println(APIKEY);
</span><span class='line'>client.println("Content-Length: 0");
</span><span class='line'>client.println("Connection: close");
</span><span class='line'>client.println();
</span><span class='line'>Serial.println("print get done.");
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>  }
</span><span class='line'>  else {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>// if you couldn't make a connection:
</span><span class='line'>Serial.println("connection failed");
</span><span class='line'>Serial.println();
</span><span class='line'>Serial.println("disconnecting.");
</span><span class='line'>client.stop();
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>  }
</span><span class='line'>   // note the time that the connection was made or attempted:
</span><span class='line'>  lastConnectionTime = millis();
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>你只要将程序中的三个常量APIKEY DEVICEID SENSORID改成你自己在yeelink上得到的值。</p>

<br>


<h3>附上两张照片</h3>

<br>


<p><img class="left" src="/images/post/arduino2.png" title="Arduino Yeelink" alt="Arduino Yeelink"></p>

<br><br>


<p><img class="left" src="/images/post/arduino3.png" title="Arduino Yeelink" alt="Arduino Yeelink"></p>

<p> 
[Ruby]:			http://www.ruby-lang.org						"Ruby"
[git]:			http://git-scm.com/								"Git"
[Jekyll]:		https://github.com/mojombo/jekyll/wiki			"Jekyll"
[Octopress]:	http://octopress.org							"Octopress"
[Markdown]:		http://daringfireball.net/projects/markdown/	"Markdown"
[Google]:		http://www.google.com							"Google"
[Yahoo]:		http://www.yahoo.com							"Yahoo"
[Twitter]:		http://twitter.com/								"Twitter"

[Firebug]:		http://getfirebug.com/							"Firebug"

[Wikipedia]:	http://www.wikipedia.org						"Wikipedia"
[维基百科]:		http://zh.wikipedia.org							"维基中文"

[煎蛋]:			http://jandan.net								"煎蛋"
[小众软件]:		http://appinn.com								"小众软件"
[小众]:			http://appinn.com								"小众软件"
[新浪微博]:		http://weibo.com								"新浪微博"
[微博]:			http://weibo.com								"新浪微博"
[墙]:			http://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E	"叹息之墙"
[知乎]:			http://www.zhihu.com							"知乎"

[CSSer]:		http://www.csser.com/							"CSSer"

[Node.JS]:		http://nodejs.org								"Node.JS"
[NPM]:			http://search.npmjs.org/						"NPM Registry"
[mocha]:		http://visionmedia.github.com/mocha/			"mocha"
[CoffeeScript]:	http://coffeescript.org/						"CoffeeScript"
[Coffee]:		http://coffeescript.org/						"CoffeeScript"
[JSCoverage]:	http://siliconforks.com/jscoverage/				"JSCoverage"
[node-jscoverage]: https://github.com/visionmedia/node-jscoverage "node-jscoverage"
[Jasmine]:		http://pivotal.github.com/jasmine/				"Jasmine"

[GitHub]:		https://github.com								"GitHub"

</p>
]]></content>
  </entry>
  
</feed>
